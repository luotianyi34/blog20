<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuhai.blog.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.xuhai.blog.bean.Blog">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="profile" jdbcType="VARCHAR" property="profile"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime"/>
        <result column="blog_status" jdbcType="INTEGER" property="blogStatus"/>
        <result column="blog_comment" jdbcType="INTEGER" property="blogComment"/>
        <result column="read_count" jdbcType="INTEGER" property="readCount"/>
        <result column="userinfo_id" jdbcType="INTEGER" property="userinfoId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_admin" jdbcType="INTEGER" property="createAdmin"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_admin" jdbcType="INTEGER" property="updateAdmin"/>
        <collection property="commentList" column="blog_id"
                    select="com.xuhai.blog.mapper.CommentMapper.getCommentByBlogId"/>
        <collection property="tagList" column="blog_id" select="com.xuhai.blog.mapper.BolgTagMapper.getTagByBlogId"/>
        <collection property="category" column="category_id"
                    select="com.xuhai.blog.mapper.TagMapper.selectByPrimaryKey"/>
    </resultMap>
    <sql id="Base_Column_List">
        blog_id, title, profile, category_id, content, apply_time, blog_status, blog_comment,
    read_count, userinfo_id, `status`, create_time, create_admin, update_time, update_admin
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog
        where blog_id = #{blogId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from blog
        where blog_id = #{blogId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="blog_id" keyProperty="blogId" parameterType="com.xuhai.blog.bean.Blog"
            useGeneratedKeys="true">
        insert into blog (title, profile, category_id,
                          content, apply_time, blog_status,
                          blog_comment, read_count, userinfo_id,
                          `status`, create_time, create_admin,
                          update_time, update_admin)
        values (#{title,jdbcType=VARCHAR}, #{profile,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER},
                #{content,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{blogStatus,jdbcType=INTEGER},
                #{blogComment,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, #{userinfoId,jdbcType=INTEGER},
                #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createAdmin,jdbcType=INTEGER},
                #{updateTime,jdbcType=TIMESTAMP}, #{updateAdmin,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="blog_id" keyProperty="blogId" parameterType="com.xuhai.blog.bean.Blog"
            useGeneratedKeys="true">
        insert into blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="profile != null">
                profile,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="applyTime != null">
                apply_time,
            </if>
            <if test="blogStatus != null">
                blog_status,
            </if>
            <if test="blogComment != null">
                blog_comment,
            </if>
            <if test="readCount != null">
                read_count,
            </if>
            <if test="userinfoId != null">
                userinfo_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createAdmin != null">
                create_admin,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateAdmin != null">
                update_admin,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="profile != null">
                #{profile,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null">
                #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogStatus != null">
                #{blogStatus,jdbcType=INTEGER},
            </if>
            <if test="blogComment != null">
                #{blogComment,jdbcType=INTEGER},
            </if>
            <if test="readCount != null">
                #{readCount,jdbcType=INTEGER},
            </if>
            <if test="userinfoId != null">
                #{userinfoId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createAdmin != null">
                #{createAdmin,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAdmin != null">
                #{updateAdmin,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xuhai.blog.bean.Blog">
        update blog
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="profile != null">
                profile = #{profile,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null">
                apply_time = #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogStatus != null">
                blog_status = #{blogStatus,jdbcType=INTEGER},
            </if>
            <if test="blogComment != null">
                blog_comment = #{blogComment,jdbcType=INTEGER},
            </if>
            <if test="readCount != null">
                read_count = #{readCount,jdbcType=INTEGER},
            </if>
            <if test="userinfoId != null">
                userinfo_id = #{userinfoId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createAdmin != null">
                create_admin = #{createAdmin,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAdmin != null">
                update_admin = #{updateAdmin,jdbcType=INTEGER},
            </if>
        </set>
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xuhai.blog.bean.Blog">
        update blog
        set title        = #{title,jdbcType=VARCHAR},
            profile      = #{profile,jdbcType=VARCHAR},
            category_id  = #{categoryId,jdbcType=INTEGER},
            content      = #{content,jdbcType=VARCHAR},
            apply_time   = #{applyTime,jdbcType=TIMESTAMP},
            blog_status  = #{blogStatus,jdbcType=INTEGER},
            blog_comment = #{blogComment,jdbcType=INTEGER},
            read_count   = #{readCount,jdbcType=INTEGER},
            userinfo_id  = #{userinfoId,jdbcType=INTEGER},
            `status`     = #{status,jdbcType=INTEGER},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            create_admin = #{createAdmin,jdbcType=INTEGER},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            update_admin = #{updateAdmin,jdbcType=INTEGER}
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>

    <select id="getAll" resultMap="BaseResultMap">
        select * from blog
        <where>
            <if test="title != null and title != ''">
                and title like concat('%',#{title},'%')
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="timeRange != null and timeRange.length>0">
                and apply_time between #{timeRange[0],javaType=string} and #{timeRange[1],javaType=string}
            </if>
            <if test="blogStatus != null">
                and blog_status = #{blogStatus}
            </if>
            <if test="blogComment != null">
                and blog_comment = #{blogComment}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
        order by blog_id desc
    </select>

    <select id="getHomeList" resultMap="BaseResultMap">
        select *
        from blog
        where status = 1
          and blog_status = 1
        order by read_count desc
        limit 8
    </select>

    <update id="changeReadCount">
        update blog
        set read_count = read_count + 1
        where blog_id = #{blogId}
    </update>
</mapper>
